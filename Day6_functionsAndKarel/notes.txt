Challenges are done in 'https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Alone&url=worlds%2Ftutorial_en%2Falone.json'

Hurdle_1 challenge:
    """
    Reeborg has entered a hurdle race, but he does not know in advance how long the race is. Make him run the course, following a path similar to the one shown, but stopping at the only flag that will be shown after the race has started.
    What you need to know
    The functions move() and turn_left().
    The condition at_goal() and its negation.
    How to use a while loop.
    Your program should also be valid for world Hurdles 1
    """
    def move_up():
        turn_left()
        move()

    def turn_right():
        turn_left()
        turn_left()
        turn_left()
        
    def hurdle():
        move_up()
        turn_right()
        move()
        turn_right()
        move()
        turn_left()

    for x in range(6):
        move()    
        hurdle()

Hurdle_3 challenge:
    """
    Reeborg has entered a hurdle race. Make him run the course, following the path shown.
    The position and number of hurdles changes each time this world is reloaded.
    What you need to know
    The functions move() and turn_left().
    The conditions front_is_clear() or wall_in_front(), at_goal(), and their negation.
    How to use a while loop and an if statement.
    """

    def move_up():
    turn_left()
    move()

    def turn_right():
        turn_left()
        turn_left()
        turn_left()
        
    def hurdle():
        move_up()
        turn_right()
        move()
        turn_right()
        move()
        turn_left()


    while not at_goal():
        if wall_in_front() == True:
            hurdle()
        else:
            move()

Hurdle_4 challenge:
    """
    Reeborg has entered a hurdle race. Make him run the course, following the path shown.
    The position, the height and the number of hurdles changes each time this world is reloaded.
    What you need to know
    You should be able to write programs that are valid for worlds Around 4 and Hurdles 3, and ot combine them for this last hurdles race.
    Your program should also be valid for worlds Hurdles 1, Hurdles 2 et Hurdles 3
    """

    def move_up():
        turn_left()
        move()

    def turn_right():
        turn_left()
        turn_left()
        turn_left()
        
    def hurdle():
        while not front_is_clear():
            move_up()
            turn_right()
            
    def move_down():
            move()
            turn_right()
            while front_is_clear():
                move()
            turn_left()
            
    while not at_goal():
        if wall_in_front() == True:
            hurdle()
            move_down()
        else:
            move()

Maze challenge:
    def turn_right():
    turn_left()
    turn_left()
    turn_left()

    while front_is_clear():
        move()
    turn_left()   
    
    while not at_goal():
        if right_is_clear():
            turn_right()
            move()
        elif front_is_clear():
            move()
        else:
            turn_left()
    
